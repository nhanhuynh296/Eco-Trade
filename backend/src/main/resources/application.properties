# port used to listen to requests
server.port=9499

# print SQL statements
spring.jpa.properties.hibernate.format_sql=true
jwt.secret=team800

# logging
logging.config=classpath:logback-spring.xml
logging.file.path=logs/

# enables message in error response
server.error.include-message=always

# Shows what's going on with the Spring Security (DEBUG most details, TRACE all details)
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.security=TRACE
# alternatively, use H2 (in-memory DB)
spring.datasource.driverClassName=org.h2.Driver

# connection details
#spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.url=jdbc:h2:file:../backend/src/main/resources/database/database;AUTO_SERVER=true
spring.datasource.initialization-mode=always
spring.datasource.username=sa
spring.datasource.password=

# H2 needs a special dialect wrapper
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# ask H2 to create / update the SQL schema at boot time (may be dangerous if used on real DB)
spring.jpa.hibernate.ddl-auto=create

# enable GUI console (similar to myPHPAdmin)
spring.h2.console.enabled=true
spring.h2.console.path=/h2

# DGAA
# 5 seconds between checking DGAA exists
dgaaCheck.fixedRate.in.milliseconds=5000
# Initial delay of 10 seconds before checking DGAA exists
dgaaCheck.initialDelay.in.milliseconds=10000

# DGAA Username and Password config
dgaa.user=admin@admin.com
dgaa.pass=admin

# Folderpath for saving images
wasteless.images.rootdir=media
wasteless.images.productdir=products
wasteless.images.userdir=users

# Image specific configuration
wasteless.images.thumbnail.scale=250
